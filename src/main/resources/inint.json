{
  "code": 5000,
  "message": "404 NOT_FOUND",
  "timestamp": 1679304362446,
  "requestId": "1e82bcd1-19",
  "fieldsErrors": null,
  "stackTrace": "org.springframework.web.server.ResponseStatusException: 404 NOT_FOUND
at org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:408)
Suppressed: The stacktrace has been enhanced by Reactor, refer to additional information below: 
Error has been observed at the following site(s):
*__checkpoint ⇢ com.provectus.kafka.ui.config.ReadOnlyModeFilter [DefaultWebFilterChain]
*__checkpoint ⇢ com.provectus.kafka.ui.config.CustomWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
*__checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
*__checkpoint ⇢ HTTP GET \"/kafka-ui\" [ExceptionHandlingWebHandler]
Original Stack Trace:
\tat org.springframework.web.reactive.resource.ResourceWebHandler.lambda$handle$1(ResourceWebHandler.java:408)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:181)
\tat reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:368)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2068)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onComplete(MonoPeekTerminal.java:299)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:148)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:113)
\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:101)
\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)
\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onNext(FluxFilterFuseable.java:118)
\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)
\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:191)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:110)
\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)
\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:87)
\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)
\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)
\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
\tat reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onComplete(FluxPeekFuseable.java:940)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:85)
\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)
\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2068)
\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
\tat reactor.core.publisher.Mono.subscribe(Mono.java:4455)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
\tat reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)
\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.checkTerminated(FluxFlatMap.java:846)
\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.drainLoop(FluxFlatMap.java:608)
\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.drain(FluxFlatMap.java:588)
\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.onComplete(FluxFlatMap.java:465)
\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)
\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:294)
\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)
\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)
\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:371)
\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)
\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)
\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
\tat reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:109)
\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onComplete(FluxFilter.java:166)
\tat reactor.core.publisher.FluxMap$MapConditionalSubscriber.onComplete(FluxMap.java:275)
\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1817)
\tat reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.signalCached(MonoCacheTime.java:337)
\tat reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber.onNext(MonoCacheTime.java:354)
\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
\tat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:181)
\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)
\tat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)
\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
\tat java.base/java.lang.Thread.run(Thread.java:833)
"
}